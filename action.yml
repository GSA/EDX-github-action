name: "EDX Github Action"
description: "EDX Github Action"
inputs:
  config-path:
    description: "Config path"
    required: true
    default: "lighthouserc.js"
  start-server-command: # id of input
    description: "Command to start server"
    required: true
    default: "bundle exec jekyll serve"
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: "2.7"
        bundler-cache: true
    - uses: actions/setup-node@v3
      with:
        node-version: 18
    - run: npm install https://github.com/GSA/lighthouse-plugin-edx#main
    - name: Audit preview URL with Lighthouse
      id: lighthouse_audit
      uses: treosh/lighthouse-ci-action@v3
      with:
        configPath: ${{ github.event.inputs.config-path }}
        temporaryPublicStorage: true
    - name: Format lighthouse score
      id: format_lighthouse_score
      uses: actions/github-script@v3
      with:
        script: |
          const result = ${{ steps.lighthouse_audit.outputs.manifest }}[0].summary
          const links = ${{ steps.lighthouse_audit.outputs.links }}

          const formatResult = (res) => Math.round((res * 100))
          Object.keys(result).forEach(key => result[key] = formatResult(result[key]))

          const score = res => res >= 90 ? 'üü¢' : res >= 50 ? 'üü†' : 'üî¥'

          const comment = [
              `‚ö°Ô∏è [Lighthouse report](${Object.values(links)[0]}) for the changes in this PR:`,
              '| Category | Score |',
              '| --- | --- |',
              `| ${score(result.performance)} Performance | ${result.performance} |`,
              `| ${score(result.accessibility)} Accessibility | ${result.accessibility} |`,
              `| ${score(result['best-practices'])} Best practices | ${result['best-practices']} |`,
              `| ${score(result.seo)} SEO | ${result.seo} |`,
              `| ${score(result.pwa)} PWA | ${result.pwa} |`,
              ' ',
              `*Lighthouse ran on [${Object.keys(links)[0]}](${Object.keys(links)[0]})*`
          ].join('\n')

            core.setOutput("comment", comment);
    - name: Add comment to PR
      id: comment_to_pr
      uses: marocchino/sticky-pull-request-comment@v1
      with:
        number: ${{ github.event.issue.number }}
        header: lighthouse
        message: |
          ${{ steps.format_lighthouse_score.outputs.comment }}
